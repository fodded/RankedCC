package me.fodded.spigotcore;import com.google.common.base.Preconditions;import lombok.Data;import lombok.Getter;import me.fodded.core.Core;import me.fodded.spigotcore.configs.ConfigLoader;import me.fodded.spigotcore.languages.LanguageManager;import me.fodded.spigotcore.listeners.PlayerConnectListener;import me.fodded.spigotcore.servers.SpigotServerManager;import org.bukkit.configuration.file.FileConfiguration;import org.bukkit.plugin.java.JavaPlugin;import org.redisson.config.Config;@Datapublic class SpigotCore {    @Getter    private static SpigotCore instance;    private JavaPlugin plugin;    private final String noPermissionMessage = "&cYou do not have permissions to run that command.";    private final String serverName;    public SpigotCore(JavaPlugin plugin) {        this.plugin = plugin;        instance = this;        serverName = ConfigLoader.getInstance().getConfig("core-config.yml").getString("server");        LanguageManager.getInstance().initializeLanguageList();        Core.initialize();    }    public void initializeConfigs() {        ConfigLoader.getInstance().createConfig("core-config.yml");    }    public void initializeListeners() {        plugin.getServer().getPluginManager().registerEvents(new PlayerConnectListener(), plugin);    }    public void initializeRedis(FileConfiguration config) {        String redisIp = config.getString("redis-ip");        int redisPort = config.getInt("redis-port");        Config redisConfig = new Config();        redisConfig.useSingleServer().setAddress("redis://" + redisIp + ":" + redisPort);        Core.getInstance().initializeRedis(redisConfig);    }    public void initializeDatabase(FileConfiguration config) {        String mongodbConnection = config.getString("mongodb-connection");        Core.getInstance().initializeDatabase(mongodbConnection);    }    public void initializeServerManager() {        new SpigotServerManager();    }    public static void initialize(JavaPlugin plugin) {        Preconditions.checkState(instance == null, "The core is already initialized");        new SpigotCore(plugin);    }}